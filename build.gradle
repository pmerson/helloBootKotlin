apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-noarg'
apply plugin: 'kotlin-allopen'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'project-report'

buildscript {
    ext {
        kotlinVersion = '1.3.0'
        springBootVersion = '2.1.3.RELEASE'
        openFeignVersion = "2.0.0.RC1"
//        releaseRepo = "http://artifactory.cpic.tcu.gov.br/artifactory/libs-release"
//        snapshotRepo = "http://artifactory.cpic.tcu.gov.br/artifactory/libs-snapshot"
        repos = {
		    mavenCentral()
//            mavenLocal()
//            maven { url releaseRepo }
//            maven { url snapshotRepo }
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
    repositories project.repos
}

//ext {
//    springCloudVersion = 'Finchley.M9'
//}

// group corresponde ao groupId do maven. O artifactId do maven corresponde ao nome do projeto em settings.gradle
group = 'pmerson.apps'
version = '0.0.1-SNAPSHOT'
// para permitir o uso de propriedades do build.gradle no application.properties do spring boot
processResources {
    expand(project.properties)
}
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

idea {
    module {
        outputDir = file("$buildDir/classes/kotlin/main")
        testOutputDir = file("$buildDir/classes/kotlin/test")
        jdkName = '1.8'
    }
}

repositories project.repos

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    // dependencias boot nao precisam de versao (explicacao: https://docs.spring.io/spring-boot/docs/1.5.15.RELEASE/reference/html/build-tool-plugins-gradle-plugin.html#build-tool-plugins-gradle-dependency-management)
    compile 'org.springframework.boot:spring-boot-starter'
    compile "org.springframework.boot:spring-boot-starter-undertow"
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile "org.springframework.boot:spring-boot-starter-web"
//    compile 'org.springframework.cloud:spring-cloud-starter-config'
//    compile 'org.springframework.cloud:spring-cloud-starter-openfeign'
//    compile group: 'de.codecentric', name: 'spring-boot-admin-starter-client', version: '2.0.2'  // p/ lib-spring-rest-comum funcionar com boot 2
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
//    compile 'br.gov.tcu.libs-tcu:infra-arq-ms-rest:1.0.11'
//    compile "com.google.guava:guava:20.0"    // springfox 2.9.x requires guava 20.0 or later
    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

test {
    // Reconfigura output de testes JUnit para mostrar detalhes de asserts que falharam (expected, actual)
    testLogging {
        exceptionFormat = 'full'
    }
}

//dependencyManagement {
//    imports {
//        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//        mavenBom("org.springframework.cloud:spring-cloud-openfeign:${openFeignVersion}")
//    }
//}

